#!/usr/bin/env python3
from __future__ import division
from __future__ import print_function

import csv
import re
import sys
from argparse import ArgumentParser

import smith


def read_csv(path):
  with open(path) as infile:
    reader = csv.DictReader(infile)
    return [row for row in reader]


def list_benchmarks(input_path, file=sys.stdout):
  names = [x["benchmark"] for x in read_csv(input_path)]

  benchmarks = {}
  for name in names:
    suite = re.match(r"^[a-zA-Z-]+-[0-9\.]+", name).group(0)

    components = name.split("-")
    kernel = components[-1]
    benchmark = components[-2]

    if suite not in benchmarks:
      benchmarks[suite] = {}
    if benchmark not in benchmarks[suite]:
      benchmarks[suite][benchmark] = set()

    benchmarks[suite][benchmark].add(kernel)

  print("suite", "#. benchmarks", "#. kernels", sep=",")
  for suite in sorted(benchmarks.keys()):
    nbenchmarks = len(benchmarks[suite])
    nkernels = sum([len(benchmarks[suite][x])
                    for x in benchmarks[suite]])
    print(suite, nbenchmarks, nkernels, sep=",")
    # for benchmark in sorted(benchmarks[suite].keys()):
    #     print(suite, benchmark, len(benchmarks[suite][benchmark]))


def main():
  parser = ArgumentParser()
  parser.add_argument('input', help='path to training data CSV')
  args = parser.parse_args()

  list_benchmarks(smith.assert_exists(args.input))


if __name__ == '__main__':
  main()
